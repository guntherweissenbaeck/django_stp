version: '3.8'

services:
  web:
    build: ./app
    container_name: django_stp_web_1
    command: >
      bash -c 'while !</dev/tcp/db/5432; do sleep 1; done;
      python manage.py makemigrations;
      python manage.py migrate;
      python manage.py collectstatic --no-input --no-post-process;
      python manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./app:/app
    expose:
      - 8000
    environment:
      - "ALLOWED_HOSTS=${ALLOWED_HOSTS}"
      - "CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}"
      - "DB_HOST=${DB_HOST}"
      - "DB_NAME=${DB_NAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "DB_PORT=${DB_PORT}"
      - "DB_USER=${DB_USER}"
      - "DEBUG=${DEBUG}"
      - "SECRET_KEY=${SECRET_KEY}"
      - "DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}"
      - "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}"
      - "EMAIL_HOST_USER=${EMAIL_HOST_USER}"
      - "EMAIL_HOST=${EMAIL_HOST}"
      - "EMAIL_PORT=${EMAIL_PORT}"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${ALLOWED_HOSTS}`)"

  db:
    image: postgres:15-alpine
    container_name: django_stp_db_1
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/
      - ./postgres/backup:/backup
    expose:
      - 5432
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "POSTGRES_DB=${DB_NAME}"

  traefik:
    image: traefik:v2.10.5
    container_name: django_stp_traefik_1
    ports:
      - 8008:80
      - 8081:8080
    volumes:
      - "./traefik/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgres_data:
